#!/bin/bash

# MQTT Firmware test

no_pid=-1
broker_pid=$no_pid

do_cleanup() {
    if [ $ENABLE_MQTT_TLS -ne 1 ]; then
        # Delete file
        rm $fileout
    fi

    if  [ $broker_pid != $no_pid ]
    then
        kill -9 $broker_pid
        echo "Killed broker PID $broker_pid"
        broker_pid=$no_pid
    fi

    if  [ $1 -ne 0 ]
    then
        exit 1
    fi
}

# Check for application
[ ! -x ./examples/firmware/fwpush ] && echo -e "\n\nMQTT Example fwpush doesn't exist" && exit 1
[ ! -x ./examples/firmware/fwclient ] && echo -e "\n\nMQTT Example fwclient doesn't exist" && exit 1

# Check for TLS support
has_tls=no
./examples/mqttclient/mqttclient -? 2>&1 | grep -- 'Enable TLS'
if [ $? -eq 0 ]; then
    has_tls=yes
fi

def_args="-T -C 5000 -n wolfMQTT/example/firmware_$((RANDOM))"
if test $has_tls == yes
then
    def_args="${def_args} -t"
fi
filein=./examples/publish.dat
fileout=./examples/publish.dat.trs


# Check for mosquitto
if command -v mosquitto
then
    # bwrap only if using a local mosquitto instance
    if [ "${AM_BWRAPPED-}" != "yes" ]; then
        bwrap_path="$(command -v bwrap)"
        if [ -n "$bwrap_path" ]; then
            echo "Firmware test using bwrap"
            export AM_BWRAPPED=yes
            exec "$bwrap_path" --unshare-net --dev-bind / / "$0" "$@"
        fi
    fi
    # Run mosquitto broker
    mosquitto -c scripts/broker_test/mosquitto.conf &
    broker_pid=$!
    echo "Broker PID is $broker_pid"
    def_args="${def_args} -h localhost -p 18883"
fi

grep -F -e 'ENABLE_MQTT_TLS' ./wolfmqtt/options.h
ENABLE_MQTT_TLS=$?

echo -e "Base args: $def_args"

# Start firmware client
./examples/firmware/fwclient $def_args -f $fileout $1 &
client_result=$?
[ $client_result -ne 0 ] && echo -e "\n\nMQTT Example fwclient failed!" && do_cleanup "-1"

# give some time for the client to connect and wait (it starts a new session)
sleep 0.5

# Start firmware push
./examples/firmware/fwpush $def_args -r -f $filein $1
server_result=$?
[ $server_result -ne 0 ] && echo -e "\n\nMQTT Example fwpush failed!" && do_cleanup "-1"

# give some time for the client complete
sleep 0.5

if [ $ENABLE_MQTT_TLS -ne 1 ]; then
    # Compare files
    echo "Comparing files"
    md5sum -b $filein $fileout
    compare_result=$?
    [ $compare_result -ne 0 ] && echo -e "\n\nMQTT Example firmware compare failed!" && do_cleanup "-1"
fi

# End broker
do_cleanup "0"

echo -e "\n\nFirmware Example MQTT Client Tests Passed"

exit 0
